function [MeanImageDiff, MeanXYDiff] = ShiftedImageDiff(file_path)

% Takes .lsm file as input.

% Calculates mean difference between pixels in consecutive images (zstacks)
% while subtracting off any shift from overall drift in the image due to
% improper syncing of piezo and confocal.

% Also calculates the mean difference between xy images for each z height
% so comparisons for different heights can be obtained.

% file_path = ['C:\Users\Eric\Documents\Xerox Data\2Hz Data Runs\2Hz 0.1V 7-12-16.mdb\timeseries4.lsm'];
% 'C:\Users\Eric\Documents\Xerox Data\2Hz Data Runs\2Hz 0.1V 7-12-16.mdb\timeseries4.lsm'

% Meera's Data (test)
% file_path = ['C:\Users\Eric\Documents\Xerox Data\Meeras Data\'...
%     '2016_04_27\0.5V_1Hz.mdb\InitialTimeseries.lsm'];

%%%%%%%% Drift subtracted part %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Difference between consecutive images with drift subtracted.
% Assumes shear_band_calculation has already been run. Could also implement
% it here instead.

% Example file_path:
% file_path = ['C:\Users\Eric\Documents\Xerox Data\2Hz Data Runs\2Hz 1.2V 7-10-16.mdb\timeseries1.lsm'];
% Example from external drive:
% file_path = ['F:\Xerox Data\2Hz Data Runs\2Hz 1.2V 7-10-16.mdb\timeseries1.lsm'];

% Import strain data generated by shear_band_calculation:
filebase = file_path(1:length(file_path)-4);
strainpathX = [filebase '_v_fieldX1.csv'];
% Ignore strainpathY. Negligible shift in 
% strainpathY = [file_path '_v_fieldY1.csv'];

bpfilepath = [filebase '

shiftX= xlsread(strainpathX);
% shiftX(time, z-height)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
zini = 1;
dz = 1;
zfin = 100;
% Size of zstack. Can be different from 
% zfin if there is an excluded part in bottom or top of image.
zsiz = 100;

freq = 1; % Imaging frequency

xsiz = 512;
ysiz = 256;
% row, column, height = y, x, z
A1 = zeros(ysiz, xsiz, zfin); 
A2 = zeros(ysiz, xsiz, zfin);
A2_shifted = zeros(ysiz, xsiz, zfin);

% Set A1 to the initial zstack:
cnt = 1;
for zframe = zini:dz:zfin
    A1(:, :, cnt) = imread(file_path, 2*zframe -1); 
    cnt = cnt +1;
end

% Choose how many time steps to calculate image difference for:
numtframes = 50;
MeanXYDiff = zeros(numtframes,(zfin+1-zini));
MeanImageDiff = zeros(numtframes,1);

% Iterate through times. For each time 
for tframe = 1:1:numtframes
    
    % Import unshifted image:
    cnt = 1;
    for zframe = zini:dz:zfin
        A2(:, :, cnt) = imread(file_path, 2*((tframe-1)*zsiz + zframe)-1); % Maybe tframe -1 to make sure we get first frame
        cnt = cnt + 1;
    end
        
    % Generate shifted image: (Could make more efficient by moving if
    % statement)
    cnt = 1;
    for zframe = zini:dz:zfin
        % X Shift for this tframe rounded to nearest integer:
        dx = round(shiftX(tframe, zframe));
        % A2_shifted = A2 if no shift
        if dx ==0
            A2_shifted(:,:,cnt) = A2(:,:,cnt);
        else
            for y = 1:1:ysiz
                for x = 1:1:xsiz
                    if (x + dx) > 0 && (x + dx) < (xsiz+1)
                        A2_shifted(y, x, cnt) = A2(y, x + dx, cnt);
                    else
                        A2_shifted(y,x,cnt) = 0;
                    end
                end
            end
        end
        cnt = cnt + 1;
    end
               
    % Calculate image difference ignoring the zeros in A2_shifted:
    StackDifference = A1-A2_shifted;
    % Need to iterate through dx for different z heights.
    for zframe = zini:dz:zfin
        dx = round(shiftX(tframe,zframe));
        if dx < 0
            MeanXYDiff(tframe, zframe) = mean(mean(abs(StackDifference(:, (1-dx):xsiz, zframe))));
        elseif dx > 0
            MeanXYDiff(tframe, zframe) = mean(mean(abs(StackDifference(:, 1:(xsiz-dx), zframe))));
        else
            MeanXYDiff(tframe, zframe) = mean(mean(abs(StackDifference(:,:,zframe))));
        end
    end
    MeanImageDiff(tframe) = mean(MeanXYDiff(tframe,:));
    
    % Old implemnetation
    % ImagDiff(tframe) = mean(mean(mean(abs(double(A1) -double(A2)))));
     
    % Set A1 to the unshifted image for the next calculation.
    A1 = A2;
 end
 
% Plot mean difference between images over time
figure;
x = 1:1:numtframes-1;
t = x/freq;
plot(t,MeanImageDiff(x),'b:o');
title('Mean difference between images vs time');
xlabel('Time (s)');
ylabel('Mean difference between images');

% Plot with time from first few times subtracted.
figure;
startCut = 3;
x = startCut:1:numtframes-1;
t = (x - (startCut-1)) /freq;
plot(t,MeanImageDiff(x),'b:o');
title('Mean difference between images vs time');
xlabel('Time (s)');
ylabel('Mean difference between images');
 
end

% Attempted method. Cant use imread for unmatched matrix sizes.
%          A2(y,x,cnt) = imread(file_path,...
%              2*(tframe*zsiz + zframe)-1,...
%              {[1,256],[1,512]})
