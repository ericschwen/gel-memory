
% MatPIV drift for just two images

% v2: try for glass data. Change to tif file from lsm (which means I no
% longer have to skip every other image since tifs dont have blanks).
% v3: use mean(mean(u)) for matPIV output.

function [dx_mean, dy_mean] = matPIV_2stacks_v1(File_path_1, File_path_2, zsiz)

%%%%%%%%%%%%% set the data path %%%%%%%%%%%%%%%

% % Testing version (and how inputs should look)
% File_path_1 = 'E:\Gardner Data\piezo 2-13-20\2-14-20 testing\ts-post-2-stacked\t001.tif';
% File_path_2 = 'E:\Gardner Data\piezo 2-13-20\2-14-20 testing\ts-post-2-stacked\t101.tif';
% zsiz = 100;

% Set variables
file_path_1 = File_path_1;
file_path_2 = File_path_2;
ztot = zsiz;


% Outputs for saving

% Sets files to save the results to.
filebase_1 = file_path_1(1:length(file_path_1)-4);
filebase_2 = file_path_2(1:length(file_path_2)-4);

strainpathX = [filebase_1 '_v_fieldX1.csv'];
strainpathY = [filebase_1 '_v_fieldY1.csv'];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% file sizes
dz = 1; % Step size for zstack
zini = 1; % Initial z position (in zstack)
zfin = ztot;

dx = zeros(ztot, 1);
dy = zeros(ztot, 1);

% Iterate through zstack. Default = ztot.
% Can set a lower value for testing, etc, if you want.
for zframe = zini : dz : zfin
    
    file1 = file_path_1;
%     K = imread(file1, 2*(zframe)-1);
    K = imread(file1, zframe);
    file1 = [file_path_1, '_temp.tif'];
    imwrite(K,file1);

    file2 = file_path_2;
%     K = imread(file2, 2*(zframe)-1 );
    K = imread(file2, zframe);
    file2 = [file_path_2, '_temp.tif'];
    imwrite(K,file2);

    %%%%%%%%%% calculate the piv %%%%%%%%%%%%%%%%%
    % Algorithm definitions
%     windows = [512 32; 512 32];
    windows = [512 512; 512 512];
%     windows = [128 32; 128 32];
%     windows = [256 32; 256 32];
    overlap = 0.5;  %Defines overlap of interrogation regions for matpiv.m
    method = 'multin';  %Defines evaluation mode for matpiv.m
    warning off Images:isrgb:obsoleteFunction;  %Turn off annoying warning

    Dt = 1;

    [x,y,u,v] = matpiv_gpu(file1, file2, windows, Dt, overlap, method);

    % save mean shift for each frame
    dx(zframe) = mean(mean(u));
    dy(zframe) = mean(mean(v));
    
    % Testing
    dx(zframe)
    dy(zframe)

    delete(file1); 
    delete(file2);

end

dx_mean = mean(dx);
dy_mean = mean(dy);


% Save mean dx and dy
csvwrite(strainpathX, dx);
csvwrite(strainpathY, dy);

end
% 
% % plot dx and dy with height
% figure;
% plot(1:length(dx), dx ,'b:o');
% hold on;
% plot(1:length(dy), dy, 'r:o');
% % title('Position vs time');
% xlabel('zframe');
% ylabel('position (pixels)');
% % xlim([0 max(timesteps)])

